var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Address.html",[0,0.411,1,1.291]],["body/interfaces/Address.html",[0,0.674,1,2.118,2,0.921,3,0.462,4,0.402,5,0.402,6,1.578,7,0.525,8,0.812,9,2.988,10,2.662,11,2.988,12,2.988,13,2.988,14,3.22,15,0.923,16,0.04,17,0.462,18,2.461,19,1.554,20,1.399,21,2.461,22,1.782,23,0.775,24,0.921,25,1.263,26,1.134,27,1.782,28,1.782,29,2.196,30,1.782,31,1.782,32,1.782,33,1.782,34,0.027,35,0.027]],["title/components/AppComponent.html",[36,1.44,37,1.44]],["body/components/AppComponent.html",[3,0.388,4,0.338,5,0.338,7,0.442,8,0.719,15,0.442,16,0.041,17,0.656,23,0.388,24,0.774,26,1.004,34,0.024,35,0.024,36,2,37,2.188,38,2.468,39,2,40,2,41,2,42,2,43,2,44,3.696,45,3.165,46,2.882,47,2.882,48,3.51,49,2.882,50,3.51,51,4.97,52,2.452,53,2.892,54,2.452,55,3.51,56,4.115,57,2.241,58,1.793,59,3.51,60,1.376,61,3.51,62,2.437,63,2.882,64,2.437,65,3.51,66,3.51,67,1.713,68,2.437,69,0.86,70,2.437,71,1.498,72,0.955,73,0.697,74,2.437,75,1.713,76,3.51,77,2.437,78,2.437,79,2.437,80,2.437,81,2.437,82,2.437,83,2.437,84,2,85,2.437,86,1.498,87,2.882,88,2.882,89,1.327,90,2.882,91,2.882,92,2,93,3.696,94,2,95,2,96,1.184,97,2,98,2]],["title/modules/AppModule.html",[99,1.161,100,1.822]],["body/modules/AppModule.html",[3,0.451,4,0.393,5,0.393,16,0.041,17,0.832,23,0.451,34,0.027,35,0.027,37,2.769,45,1.988,69,0.998,73,0.809,89,1.54,99,1.109,100,3.528,101,1.233,102,1.54,103,3.137,104,3.137,105,2.741,106,1.739,107,2.322,108,2.322,109,2.322,110,2.322,111,2.84,112,2.84,113,2.84,114,2.741,115,1.988,116,1.739,117,2.828,118,2.398,119,2.398,120,3.899,121,2.322,122,1.988,123,2.828,124,2.828,125,2.828,126,2.828]],["title/modules/AppRoutingModule.html",[99,1.161,111,1.613]],["body/modules/AppRoutingModule.html",[3,0.624,4,0.543,5,0.543,16,0.04,17,0.768,23,0.624,34,0.033,35,0.033,69,1.381,73,1.119,75,2.751,101,1.705,106,2.406,111,2.625,118,2.406,119,2.964,127,3.913,128,3.913,129,4.821,130,3.673,131,3.212,132,3.913]],["title/classes/BaseCrudService.html",[73,0.847,133,1.822]],["body/classes/BaseCrudService.html",[3,0.246,4,0.214,5,0.214,7,0.28,8,0.507,15,0.644,16,0.041,17,0.662,20,0.545,23,0.246,26,1.113,34,0.017,35,0.017,54,2.616,57,1.691,58,1.353,60,1.628,67,1.086,69,0.545,71,1.909,72,0.605,73,0.442,75,2.735,133,1.524,134,1.544,135,4.03,136,1.268,137,2.035,138,1.509,139,1.909,140,3.41,141,2.549,142,2.533,143,1.691,144,2.549,145,1.742,146,1.35,147,1.35,148,2.616,149,1.35,150,1.544,151,2.035,152,1.544,153,2.479,154,1.544,155,2.035,156,1.544,157,1.742,158,2.183,159,1.544,160,2.735,161,2.735,162,2.92,163,2.213,164,1.742,165,3.583,166,1.544,167,2.119,168,1.544,169,2.917,170,1.544,171,1.544,172,1.268,173,1.742,174,2.183,175,1.544,176,0.75,177,0.75,178,1.544,179,2.479,180,0.949,181,3.891,182,1.544,183,1.268,184,1.544,185,1.544,186,3.554,187,1.544,188,2.479,189,2.479,190,2.479,191,3.891,192,2.393,193,2.393,194,2.393,195,0.949,196,2.554,197,3.554,198,3.554,199,2.479,200,1.544,201,1.544,202,1.544,203,1.544,204,1.544,205,1.544,206,1.544,207,2.479,208,2.479,209,0.949,210,0.949,211,1.544,212,1.544,213,0.949]],["title/interfaces/Company.html",[0,0.411,29,1.44]],["body/interfaces/Company.html",[0,0.689,1,2.021,2,0.969,3,0.486,4,0.423,5,0.423,6,1.659,7,0.553,8,0.84,9,1.874,10,2.254,11,1.874,12,1.874,13,1.874,14,3.217,15,0.841,16,0.04,17,0.486,18,2.526,19,1.608,20,1.448,21,2.526,22,1.874,23,0.791,24,0.969,25,1.328,26,1.481,27,1.874,28,1.874,29,2.411,30,1.874,31,1.874,32,3.051,33,3.051,34,0.028,35,0.028]],["title/modules/CoreModule.html",[99,1.161,112,1.613]],["body/modules/CoreModule.html",[2,1.351,3,0.512,4,0.446,5,0.446,15,0.583,16,0.04,17,0.678,23,0.512,34,0.029,35,0.029,69,1.134,73,0.919,99,1.259,101,1.4,112,2.593,118,1.976,119,2.613,183,2.638,214,3.213,215,3.213,216,3.213,217,3.213,218,2.988,219,3.213,220,3.213,221,3.213,222,3.563,223,3.213,224,3.213,225,2.638,226,3.213,227,2.638,228,3.213,229,3.213,230,1.75,231,3.213,232,3.213,233,3.213,234,3.213,235,3.213,236,3.213,237,2.593,238,3.489,239,4.25,240,3.213,241,3.213,242,3.213,243,3.213,244,3.213,245,2.638,246,2.638,247,2.638,248,2.638,249,2.638,250,2.638,251,2.638,252,4.25]],["title/interfaces/Geo.html",[0,0.411,10,1.44]],["body/interfaces/Geo.html",[0,0.696,1,2.048,2,0.994,3,0.499,4,0.434,5,0.434,6,1.703,7,0.567,8,0.855,9,1.923,10,2.437,11,1.923,12,1.923,13,1.923,14,3.203,15,0.757,16,0.04,17,0.499,18,2.559,19,1.636,20,1.474,21,2.559,22,1.923,23,0.799,24,0.994,25,1.363,26,1.194,27,1.923,28,1.923,29,2.284,30,3.083,31,3.083,32,1.923,33,1.923,34,0.028,35,0.028]],["title/interfaces/User.html",[0,0.411,24,0.942]],["body/interfaces/User.html",[0,0.654,1,2.346,2,0.858,3,0.43,4,0.375,5,0.375,6,1.47,7,0.489,8,0.773,9,1.66,10,2.115,11,1.66,12,1.66,13,1.66,14,3.14,15,0.976,16,0.04,17,0.43,18,2.932,19,1.848,20,1.664,21,2.932,22,1.66,23,0.751,24,1.2,25,2.054,26,1.419,27,2.899,28,2.899,29,2.616,30,1.66,31,1.66,32,1.66,33,1.66,34,0.026,35,0.026]],["title/components/UserComponent.html",[36,1.44,96,1.44]],["body/components/UserComponent.html",[3,0.413,4,0.359,5,0.359,7,0.469,8,0.75,16,0.041,17,0.584,23,0.413,24,1.353,26,1.048,34,0.025,35,0.025,36,2.068,37,1.258,38,2.577,39,2.126,40,2.126,41,2.126,43,2.126,44,3.799,45,3.254,47,3.009,49,3.009,52,2.901,53,1.82,54,1.41,57,1.41,58,1.128,63,3.494,67,2.577,69,0.914,73,0.74,87,3.009,88,3.009,89,1.41,90,3.009,91,3.009,92,2.126,93,3.799,94,2.126,95,2.126,96,2.249,97,2.126,98,2.126,245,3.009,246,2.126,247,3.009,248,3.009,249,3.009,250,3.009,251,3.009,253,2.126,254,3.666,255,3.666,256,4.01,257,2.589,258,2.589,259,3.666,260,3.666,261,3.666,262,2.589]],["title/modules/UserModule.html",[99,1.161,113,1.613]],["body/modules/UserModule.html",[3,0.529,4,0.46,5,0.46,16,0.041,17,0.771,23,0.529,34,0.03,35,0.03,69,1.171,73,0.948,89,1.806,96,2.839,99,1.3,101,1.445,102,1.806,103,3.4,104,2.331,105,2.331,106,2.974,113,3.031,114,3.051,115,2.331,116,2.039,118,2.039,119,2.668,263,2.723,264,2.723,265,2.723,266,3.316,267,4.34,268,2.723,269,3.316]],["title/injectables/UserService.html",[52,1.613,270,1.822]],["body/injectables/UserService.html",[3,0.377,4,0.328,5,0.328,7,0.429,8,0.704,15,0.805,16,0.04,17,0.645,23,0.377,24,0.752,26,1.157,34,0.023,35,0.023,46,1.943,52,1.872,53,2.845,54,2.887,57,2.419,58,1.936,60,0.928,69,0.835,71,1.455,73,0.677,84,1.943,133,3.355,140,3.646,141,2.822,142,2.293,143,1.872,144,2.822,145,2.416,146,1.872,147,1.872,148,2.204,149,1.872,151,1.943,155,1.943,157,1.664,158,2.416,160,2.845,161,2.845,162,3.122,163,1.936,164,1.664,165,3.646,167,1.872,173,1.664,174,2.416,270,2.113,271,2.367,272,1.943,273,3.437,274,2.367,275,5.202,276,2.367,277,2.367,278,2.367,279,2.367,280,3.437,281,2.367,282,2.367,283,2.367,284,2.367,285,2.367,286,2.367,287,2.367,288,2.367,289,2.367,290,2.367,291,2.367,292,2.367,293,2.367]],["title/interfaces/YCrudServicePattern.html",[0,0.411,138,1.44]],["body/interfaces/YCrudServicePattern.html",[0,0.452,2,0.528,3,0.265,4,0.231,5,0.231,7,0.301,8,0.538,15,0.672,16,0.041,17,0.419,19,0.651,20,0.587,23,0.52,25,1.421,26,1.154,34,0.018,35,0.018,54,2.337,60,1.03,72,0.651,138,1.277,142,2.331,143,2.612,145,1.848,146,2.198,147,2.537,148,2.775,149,2.337,157,1.169,158,1.848,160,2.837,161,2.837,162,3.016,163,2.141,164,1.169,167,2.447,169,2.158,172,1.365,173,1.169,174,1.848,176,0.808,177,0.808,180,1.022,192,1.022,193,1.022,194,1.022,195,1.616,196,1.022,209,3.343,210,2.278,213,1.616,230,2.017,237,2.017,294,2.763,295,0.905,296,2.605,297,3.016,298,2.278,299,1.848,300,2.605,301,1.616,302,1.848,303,1.848,304,1.848,305,2.605,306,1.848,307,1.848,308,1.848,309,1.616,310,1.662,311,1.848,312,1.848,313,1.848,314,1.662,315,1.662,316,1.662,317,1.662,318,1.662,319,1.616,320,1.169,321,2.837,322,1.169,323,1.169,324,1.169,325,1.169,326,1.169,327,1.169,328,1.169,329,1.169,330,1.169,331,1.169,332,1.169]],["title/interfaces/YCrudServiceResponse.html",[0,0.411,176,1.44]],["body/interfaces/YCrudServiceResponse.html",[0,0.542,2,0.708,3,0.355,4,0.309,5,0.309,7,0.404,8,0.673,15,0.708,16,0.042,17,0.524,19,0.873,20,0.786,23,0.623,25,1.432,34,0.022,35,0.022,60,0.873,72,0.873,138,1.082,142,2.097,143,1.79,146,1.79,147,2.128,148,2.128,149,1.79,163,1.88,167,2.128,176,1.597,177,1.082,180,1.369,192,2.653,193,2.402,194,2.653,195,1.369,196,2.653,209,3.144,210,2.021,213,1.369,230,1.79,237,1.79,294,1.369,295,1.212,297,2.747,298,2.021,299,1.565,300,2.311,301,1.369,302,1.565,303,1.565,304,1.565,305,2.311,306,1.565,307,1.565,308,1.565,309,1.369,311,1.565,312,1.565,313,1.565,319,2.653,320,1.565,321,3.235,322,1.565,323,1.565,324,1.565,325,1.565,326,1.565,327,1.565,328,1.565,329,2.747,330,2.747,331,2.747,332,1.565]],["title/interfaces/YEntityWithId.html",[0,0.411,177,1.44]],["body/interfaces/YEntityWithId.html",[0,0.559,2,0.746,3,0.374,4,0.326,5,0.326,7,0.425,8,0.699,15,0.425,16,0.042,17,0.545,19,1.579,20,0.828,23,0.642,25,2.138,34,0.023,35,0.023,60,0.92,72,0.92,138,1.14,142,2.15,143,1.86,146,1.86,147,2.193,148,2.193,149,1.86,163,1.928,167,2.193,176,1.14,177,1.66,180,1.443,192,1.443,193,1.443,194,1.443,195,1.443,196,1.443,209,3.254,210,2.1,213,1.443,230,1.86,237,1.86,294,1.443,295,1.278,296,1.65,297,2.831,298,2.1,299,1.65,300,2.401,301,1.443,302,1.65,303,1.65,304,1.65,305,2.401,306,1.65,307,1.65,308,1.65,309,1.443,311,1.65,312,1.65,313,1.65,319,2.1,320,1.65,321,3.305,322,1.65,323,1.65,324,1.65,325,1.65,326,1.65,327,1.65,328,1.65,329,1.65,330,1.65,331,1.65,332,1.65]],["title/interfaces/YReactiveService.html",[0,0.411,139,1.822]],["body/interfaces/YReactiveService.html",[0,0.646,2,0.976,3,0.489,4,0.426,5,0.426,7,0.557,8,0.844,15,0.557,16,0.04,17,0.489,23,0.489,34,0.028,35,0.028,58,2.169,71,1.888,72,1.203,139,2.535,142,2.698,163,2.263,230,2.245,237,2.245,256,3.385,295,1.672,296,2.158,298,3.494,301,2.535,333,2.52,334,5.346,335,4.123,336,4.123,337,4.977,338,4.655,339,4.655]],["title/coverage.html",[340,3.304]],["body/coverage.html",[0,0.765,1,1.299,5,0.414,6,2.678,10,1.449,15,0.541,16,0.04,24,0.948,29,1.449,34,0.028,35,0.028,36,1.965,37,1.449,42,2.448,52,1.624,60,1.169,73,0.853,86,3.475,96,1.449,133,1.833,135,2.448,136,2.448,138,1.449,139,1.833,176,1.449,177,1.449,253,2.448,270,1.833,272,2.448,294,2.82,295,2.678,333,2.448,340,2.448,341,2.981,342,2.981,343,2.981,344,2.981,345,2.981,346,2.981,347,2.981,348,4.042,349,2.981,350,2.981,351,4.042,352,2.981,353,2.981,354,2.981,355,2.981,356,2.981,357,2.981,358,3.319,359,3.319,360,4.042,361,2.448,362,2.981,363,2.448,364,2.981,365,2.981,366,2.981]],["title/dependencies.html",[102,1.938,367,1.746]],["body/dependencies.html",[16,0.041,34,0.033,35,0.033,69,1.362,72,1.512,102,2.101,121,3.923,122,3.359,131,3.167,268,3.167,368,3.858,369,5.82,370,3.858,371,3.858,372,3.858,373,3.858,374,3.858,375,3.858,376,3.858,377,3.858]],["title/index.html",[7,0.45,378,2.483,379,2.483]],["body/index.html",[4,0.411,16,0.027,26,0.846,34,0.027,35,0.027,36,2.221,60,1.16,116,1.82,137,2.43,238,2.43,309,2.474,367,2.081,380,2.96,381,4.023,382,2.96,383,3.751,384,4.57,385,2.43,386,2.96,387,2.96,388,5.127,389,5.41,390,2.96,391,2.96,392,2.96,393,2.96,394,2.96,395,2.96,396,2.96,397,2.96,398,2.96,399,2.96,400,4.57,401,4.57,402,2.96,403,4.903,404,2.96,405,2.96,406,2.96,407,2.96,408,4.023,409,4.023,410,4.903,411,2.96,412,4.023,413,4.023,414,2.96,415,5.289,416,2.96,417,2.96,418,2.96,419,4.023,420,2.96,421,2.96,422,2.96,423,2.96,424,2.96,425,2.96,426,4.57,427,2.96,428,2.96,429,2.96,430,2.081,431,2.96,432,2.96]],["title/modules.html",[101,1.754]],["body/modules.html",[16,0.034,34,0.034,35,0.034,100,2.59,101,1.836,111,2.294,112,2.294,113,2.294,122,3.544,433,5.041,434,5.041,435,5.591,436,5.041,437,5.041]],["title/overview.html",[430,2.83]],["body/overview.html",[2,1.046,16,0.039,34,0.029,35,0.029,37,2.7,38,2.313,73,0.941,86,2.023,89,1.792,96,2.7,99,1.289,100,3.565,101,1.434,102,1.792,103,2.313,104,2.313,105,2.313,106,2.023,107,2.701,108,2.701,109,2.701,110,2.701,111,2.624,112,2.624,113,2.968,114,3.035,115,2.313,116,2.023,263,2.701,264,2.701,265,2.701,270,2.023,430,2.313,438,3.29,439,3.29,440,4.317,441,3.29]],["title/properties.html",[8,0.728,367,1.746]],["body/properties.html",[8,0.934,16,0.038,34,0.036,35,0.036,385,3.744,442,4.561]],["title/routes.html",[130,2.83]],["body/routes.html",[16,0.036,34,0.036,35,0.036,130,3.26]],["title/miscellaneous/typealiases.html",[443,1.527,444,3.558]],["body/miscellaneous/typealiases.html",[1,1.481,7,0.616,14,2.665,15,0.616,16,0.033,18,2.82,19,1.728,20,1.828,21,2.665,24,1.08,26,0.972,34,0.03,35,0.03,58,1.922,218,2.389,222,2.389,225,2.79,227,2.79,319,3.009,443,2.09,445,3.398,446,5.5,447,4.894,448,3.398,449,3.398,450,3.398,451,4.409,452,3.398,453,4.409,454,3.398,455,3.398,456,3.398,457,4.409,458,3.398,459,3.398,460,3.398,461,3.398,462,3.398,463,3.398,464,2.79,465,2.79,466,3.398,467,3.398,468,3.398]],["title/miscellaneous/variables.html",[443,1.527,469,2.921]],["body/miscellaneous/variables.html",[7,0.592,15,0.592,16,0.036,34,0.029,35,0.029,57,2.339,58,1.872,72,1.279,86,2.007,163,1.872,218,3.019,222,3.585,358,2.68,359,3.94,361,3.94,363,3.526,383,3.526,443,2.007,464,2.68,465,2.68,469,2.68,470,4.295,471,3.264,472,3.264,473,4.295,474,3.264,475,3.264,476,4.8,477,3.264,478,3.264,479,3.264,480,4.8,481,4.8,482,3.264,483,3.264,484,3.264,485,3.264,486,3.264,487,3.264,488,3.264,489,3.264,490,3.264,491,4.8,492,4.295,493,3.264,494,3.264,495,4.295,496,3.264,497,3.264,498,3.264,499,3.264]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BaseCrudService.html":{},"interfaces/Company.html":{},"modules/CoreModule.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":442,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":357,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":345,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":353,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":355,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":348,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":344,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":354,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":440,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":350,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":351,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":455,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["18.0.0",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["18.0.2",{"_index":386,"title":{},"body":{"index.html":{}}}],["2",{"_index":439,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":352,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":438,"title":{},"body":{"overview.html":{}}}],["50",{"_index":349,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":293,"title":{},"body":{"injectables/UserService.html":{}}}],["6/8",{"_index":347,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":346,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":441,"title":{},"body":{"overview.html":{}}}],["_data",{"_index":141,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{}}}],["aapplication",{"_index":224,"title":{},"body":{"modules/CoreModule.html":{}}}],["abstract",{"_index":185,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["access",{"_index":335,"title":{},"body":{"interfaces/YReactiveService.html":{}}}],["actual_component",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["add",{"_index":422,"title":{},"body":{"index.html":{}}}],["address",{"_index":1,"title":{"interfaces/Address.html":{}},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["alias",{"_index":459,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":445,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":383,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":268,"title":{},"body":{"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":183,"title":{},"body":{"classes/BaseCrudService.html":{},"modules/CoreModule.html":{}}}],["angular/compiler",{"_index":370,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BaseCrudService.html":{},"modules/CoreModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["anytraining",{"_index":380,"title":{},"body":{"index.html":{}}}],["api",{"_index":305,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["app",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/UserComponent.html":{}}}],["app.component",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":37,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":238,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["appmodule",{"_index":100,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":111,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["architecturaux",{"_index":220,"title":{},"body":{"modules/CoreModule.html":{}}}],["artifacts",{"_index":404,"title":{},"body":{"index.html":{}}}],["async",{"_index":260,"title":{},"body":{"components/UserComponent.html":{}}}],["automatically",{"_index":394,"title":{},"body":{"index.html":{}}}],["autre",{"_index":496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":437,"title":{},"body":{"modules.html":{}}}],["basecrudservice",{"_index":133,"title":{"classes/BaseCrudService.html":{}},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["basecrudservice:10",{"_index":281,"title":{},"body":{"injectables/UserService.html":{}}}],["basecrudservice:15",{"_index":282,"title":{},"body":{"injectables/UserService.html":{}}}],["basecrudservice:16",{"_index":283,"title":{},"body":{"injectables/UserService.html":{}}}],["basecrudservice:18",{"_index":284,"title":{},"body":{"injectables/UserService.html":{}}}],["basecrudservice:20",{"_index":276,"title":{},"body":{"injectables/UserService.html":{}}}],["basecrudservice:31",{"_index":278,"title":{},"body":{"injectables/UserService.html":{}}}],["basecrudservice:53",{"_index":279,"title":{},"body":{"injectables/UserService.html":{}}}],["basecrudservice:63",{"_index":277,"title":{},"body":{"injectables/UserService.html":{}}}],["behaviorsubject",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseCrudService.html":{},"injectables/UserService.html":{},"interfaces/YReactiveService.html":{}}}],["behaviorsubject(0",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["bootstrap",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["bounded",{"_index":454,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["browse",{"_index":435,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["bs",{"_index":33,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{}}}],["build",{"_index":403,"title":{},"body":{"index.html":{}}}],["capabilities",{"_index":424,"title":{},"body":{"index.html":{}}}],["capitalize",{"_index":468,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["capitalized",{"_index":467,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["catchphrase",{"_index":32,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{}}}],["cette",{"_index":223,"title":{},"body":{"modules/CoreModule.html":{}}}],["change",{"_index":396,"title":{},"body":{"index.html":{}}}],["changements",{"_index":484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["characters",{"_index":456,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["check",{"_index":429,"title":{},"body":{"index.html":{}}}],["choice",{"_index":418,"title":{},"body":{"index.html":{}}}],["city",{"_index":9,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{}}}],["class",{"_index":73,"title":{"classes/BaseCrudService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BaseCrudService.html":{},"modules/CoreModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":134,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["clefs",{"_index":221,"title":{},"body":{"modules/CoreModule.html":{}}}],["cli",{"_index":384,"title":{},"body":{"index.html":{}}}],["click",{"_index":361,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":263,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_declarations",{"_index":265,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":264,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":398,"title":{},"body":{"index.html":{}}}],["command",{"_index":419,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":267,"title":{},"body":{"modules/UserModule.html":{}}}],["company",{"_index":29,"title":{"interfaces/Company.html":{}},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["compatible",{"_index":499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component",{"_index":36,"title":{"components/AppComponent.html":{},"components/UserComponent.html":{}},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["components",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{},"overview.html":{}}}],["computed",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["concepts",{"_index":219,"title":{},"body":{"modules/CoreModule.html":{}}}],["console.log('incremented",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/BaseCrudService.html":{}}}],["constructor",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["contain",{"_index":312,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["core",{"_index":216,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/abstracts/crud",{"_index":285,"title":{},"body":{"injectables/UserService.html":{}}}],["core/core.module",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["core/types/generics.types",{"_index":22,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{}}}],["coremodule",{"_index":112,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["corporate",{"_index":450,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["count",{"_index":363,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":340,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":146,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["create(data",{"_index":157,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{}}}],["created",{"_index":195,"title":{},"body":{"classes/BaseCrudService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["crud",{"_index":297,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["d'entités",{"_index":234,"title":{},"body":{"modules/CoreModule.html":{}}}],["d'implémentation",{"_index":494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d'utilisateurs",{"_index":246,"title":{},"body":{"modules/CoreModule.html":{},"components/UserComponent.html":{}}}],["d\\'utilisateurs",{"_index":262,"title":{},"body":{"components/UserComponent.html":{}}}],["dans",{"_index":464,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":142,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{}}}],["data).subscribe(data",{"_index":188,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["data:omit",{"_index":322,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["data:partial",{"_index":327,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["de",{"_index":222,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["default",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseCrudService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseCrudService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{}}}],["delete",{"_index":147,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["delete(target",{"_index":164,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{}}}],["delete(target:entity):observable",{"_index":328,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["deleted",{"_index":213,"title":{},"body":{"classes/BaseCrudService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["dependencies",{"_index":102,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dernier",{"_index":248,"title":{},"body":{"modules/CoreModule.html":{},"components/UserComponent.html":{}}}],["des",{"_index":483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":296,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{}}}],["dev",{"_index":391,"title":{},"body":{"index.html":{}}}],["development",{"_index":387,"title":{},"body":{"index.html":{}}}],["directive",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["directives",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":402,"title":{},"body":{"index.html":{}}}],["directory",{"_index":407,"title":{},"body":{"index.html":{}}}],["dist",{"_index":406,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":341,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["donc",{"_index":487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["données",{"_index":480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["décrivant",{"_index":229,"title":{},"body":{"modules/CoreModule.html":{}}}],["e",{"_index":153,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["e2e",{"_index":416,"title":{},"body":{"index.html":{}}}],["effect",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["element",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["email",{"_index":18,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["emits",{"_index":336,"title":{},"body":{"interfaces/YReactiveService.html":{}}}],["encapsule",{"_index":217,"title":{},"body":{"modules/CoreModule.html":{}}}],["end",{"_index":415,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":143,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["endpoint:any",{"_index":290,"title":{},"body":{"injectables/UserService.html":{}}}],["endpoint:endpoint",{"_index":320,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["entities",{"_index":232,"title":{},"body":{"modules/CoreModule.html":{}}}],["entity",{"_index":209,"title":{},"body":{"classes/BaseCrudService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["entity.id",{"_index":207,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["error",{"_index":329,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["est",{"_index":475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["et",{"_index":481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":243,"title":{},"body":{"modules/CoreModule.html":{}}}],["execute",{"_index":412,"title":{},"body":{"index.html":{}}}],["export",{"_index":23,"title":{},"body":{"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BaseCrudService.html":{},"interfaces/Company.html":{},"modules/CoreModule.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{}}}],["exports",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["extends",{"_index":273,"title":{},"body":{"injectables/UserService.html":{}}}],["faut",{"_index":486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["features/user/user.module",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["features/user/user.service",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["field",{"_index":313,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BaseCrudService.html":{},"interfaces/Company.html":{},"modules/CoreModule.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{},"coverage.html":{}}}],["files",{"_index":397,"title":{},"body":{"index.html":{}}}],["filter",{"_index":202,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["first",{"_index":421,"title":{},"body":{"index.html":{}}}],["flux",{"_index":479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fonctionnels",{"_index":240,"title":{},"body":{"modules/CoreModule.html":{}}}],["fromevent(document",{"_index":471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["further",{"_index":425,"title":{},"body":{"index.html":{}}}],["gaurd",{"_index":242,"title":{},"body":{"modules/CoreModule.html":{}}}],["generate",{"_index":400,"title":{},"body":{"index.html":{}}}],["generated",{"_index":382,"title":{},"body":{"index.html":{}}}],["generics",{"_index":225,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/typealiases.html":{}}}],["geo",{"_index":10,"title":{"interfaces/Geo.html":{}},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["getting",{"_index":378,"title":{"index.html":{}},"body":{}}],["go",{"_index":428,"title":{},"body":{"index.html":{}}}],["graph",{"_index":436,"title":{},"body":{"modules.html":{}}}],["guards",{"_index":241,"title":{},"body":{"modules/CoreModule.html":{}}}],["help",{"_index":426,"title":{},"body":{"index.html":{}}}],["html",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["http",{"_index":144,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":393,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":182,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["httpclientmodule",{"_index":252,"title":{},"body":{"modules/CoreModule.html":{}}}],["https://jsonplaceholder.typicode.com/users",{"_index":280,"title":{},"body":{"injectables/UserService.html":{}}}],["id",{"_index":25,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["id:uniqueid",{"_index":332,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["identifier",{"_index":342,"title":{},"body":{"coverage.html":{}}}],["il",{"_index":485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implement",{"_index":301,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{}}}],["implements",{"_index":137,"title":{},"body":{"classes/BaseCrudService.html":{},"index.html":{}}}],["implémentation",{"_index":497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import",{"_index":17,"title":{},"body":{"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BaseCrudService.html":{},"interfaces/Company.html":{},"modules/CoreModule.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{}}}],["imports",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/UserModule.html":{}}}],["increment",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Address.html":{},"components/AppComponent.html":{},"classes/BaseCrudService.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BaseCrudService.html":{},"interfaces/Company.html":{},"modules/CoreModule.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{}}}],["inherited",{"_index":275,"title":{},"body":{"injectables/UserService.html":{}}}],["inject",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseCrudService.html":{},"components/UserComponent.html":{}}}],["inject(httpclient",{"_index":155,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{}}}],["inject(userservice",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["injectable",{"_index":270,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":271,"title":{},"body":{"injectables/UserService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{}},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"modules/CoreModule.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{},"overview.html":{}}}],["json",{"_index":261,"title":{},"body":{"components/UserComponent.html":{}}}],["karma",{"_index":414,"title":{},"body":{"index.html":{}}}],["l'application",{"_index":227,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/typealiases.html":{}}}],["la",{"_index":472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lat",{"_index":30,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{}}}],["latest",{"_index":337,"title":{},"body":{"interfaces/YReactiveService.html":{}}}],["legend",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["les",{"_index":218,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["level",{"_index":239,"title":{},"body":{"modules/CoreModule.html":{}}}],["link",{"_index":466,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["list",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["lng",{"_index":31,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{}}}],["load",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["log",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["lowercase",{"_index":451,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["make",{"_index":307,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["matching",{"_index":35,"title":{},"body":{"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BaseCrudService.html":{},"interfaces/Company.html":{},"modules/CoreModule.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":194,"title":{},"body":{"classes/BaseCrudService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["metadata",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["methods",{"_index":145,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{}}}],["metteur",{"_index":488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":443,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":99,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":101,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":427,"title":{},"body":{"index.html":{}}}],["name",{"_index":26,"title":{},"body":{"interfaces/Address.html":{},"components/AppComponent.html":{},"classes/BaseCrudService.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["navigate",{"_index":392,"title":{},"body":{"index.html":{}}}],["need",{"_index":420,"title":{},"body":{"index.html":{}}}],["new",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseCrudService.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":389,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/UserModule.html":{}}}],["nombre",{"_index":245,"title":{},"body":{"modules/CoreModule.html":{},"components/UserComponent.html":{}}}],["null",{"_index":331,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["number",{"_index":465,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":163,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{},"miscellaneous/variables.html":{}}}],["observables",{"_index":498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observer",{"_index":490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["omit",{"_index":158,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{}}}],["operations",{"_index":300,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["optional",{"_index":161,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{}}}],["orient",{"_index":478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ou",{"_index":235,"title":{},"body":{"modules/CoreModule.html":{}}}],["out",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["outgoing",{"_index":311,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["override",{"_index":289,"title":{},"body":{"injectables/UserService.html":{}}}],["overview",{"_index":430,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":330,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["package",{"_index":367,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":432,"title":{},"body":{"index.html":{}}}],["paradigme",{"_index":477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":321,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["parameters",{"_index":160,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{}}}],["partial",{"_index":174,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{}}}],["pattern",{"_index":230,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{}}}],["patterns",{"_index":228,"title":{},"body":{"modules/CoreModule.html":{}}}],["patterns/crud",{"_index":178,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["patterns/reactive",{"_index":184,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["payload",{"_index":196,"title":{},"body":{"classes/BaseCrudService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["phone",{"_index":27,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{}}}],["pick",{"_index":338,"title":{},"body":{"interfaces/YReactiveService.html":{}}}],["platform",{"_index":417,"title":{},"body":{"index.html":{}}}],["post",{"_index":302,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["pour",{"_index":460,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["programmation",{"_index":473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":381,"title":{},"body":{"index.html":{}}}],["propagation",{"_index":482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Address.html":{},"components/AppComponent.html":{},"classes/BaseCrudService.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{},"properties.html":{}}}],["protected",{"_index":140,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{}}}],["providedin",{"_index":288,"title":{},"body":{"injectables/UserService.html":{}}}],["providers",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":256,"title":{},"body":{"components/UserComponent.html":{},"interfaces/YReactiveService.html":{}}}],["put",{"_index":303,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["reactive",{"_index":334,"title":{},"body":{"interfaces/YReactiveService.html":{}}}],["read",{"_index":148,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["read():observable",{"_index":323,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["read(target",{"_index":169,"title":{},"body":{"classes/BaseCrudService.html":{},"interfaces/YCrudServicePattern.html":{}}}],["read(target:entity['id']):observable",{"_index":324,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["read(target?:entity['id",{"_index":325,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["readme",{"_index":214,"title":{},"body":{"modules/CoreModule.html":{}}}],["recommandées",{"_index":231,"title":{},"body":{"modules/CoreModule.html":{}}}],["reference",{"_index":431,"title":{},"body":{"index.html":{}}}],["reload",{"_index":395,"title":{},"body":{"index.html":{}}}],["requests",{"_index":308,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["reset",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["responsible",{"_index":299,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["results",{"_index":34,"title":{},"body":{"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BaseCrudService.html":{},"interfaces/Company.html":{},"modules/CoreModule.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":197,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["returns",{"_index":162,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{}}}],["root",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["routermodule",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":130,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":388,"title":{},"body":{"index.html":{}}}],["running",{"_index":408,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseCrudService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["réactive",{"_index":474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["récepteur",{"_index":489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["réprésenation",{"_index":233,"title":{},"body":{"modules/CoreModule.html":{}}}],["scaffolding",{"_index":399,"title":{},"body":{"index.html":{}}}],["selector",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["semantics",{"_index":458,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["serve",{"_index":390,"title":{},"body":{"index.html":{}}}],["server",{"_index":309,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"index.html":{}}}],["service",{"_index":298,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{}}}],["service.abstract",{"_index":286,"title":{},"body":{"injectables/UserService.html":{}}}],["service.abstract.ts",{"_index":136,"title":{},"body":{"classes/BaseCrudService.html":{},"coverage.html":{}}}],["service.abstract.ts:13",{"_index":154,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["service.abstract.ts:15",{"_index":150,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["service.abstract.ts:16",{"_index":152,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["service.abstract.ts:18",{"_index":156,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["service.abstract.ts:20",{"_index":159,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["service.abstract.ts:31",{"_index":168,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["service.abstract.ts:32",{"_index":170,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["service.abstract.ts:33",{"_index":171,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["service.abstract.ts:53",{"_index":175,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["service.abstract.ts:63",{"_index":166,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["service.pattern",{"_index":179,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["service.pattern.ts",{"_index":295,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{},"coverage.html":{}}}],["service.pattern.ts:28",{"_index":310,"title":{},"body":{"interfaces/YCrudServicePattern.html":{}}}],["service.pattern.ts:34",{"_index":315,"title":{},"body":{"interfaces/YCrudServicePattern.html":{}}}],["service.pattern.ts:35",{"_index":316,"title":{},"body":{"interfaces/YCrudServicePattern.html":{}}}],["service.pattern.ts:36",{"_index":317,"title":{},"body":{"interfaces/YCrudServicePattern.html":{}}}],["service.pattern.ts:43",{"_index":318,"title":{},"body":{"interfaces/YCrudServicePattern.html":{}}}],["service.pattern.ts:49",{"_index":314,"title":{},"body":{"interfaces/YCrudServicePattern.html":{}}}],["serviceresponse",{"_index":186,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["serviceresponse.asobservable",{"_index":198,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["serviceresponse.next",{"_index":191,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["services",{"_index":237,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{}}}],["settimeout",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserService.html":{}}}],["signal",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["signal(0",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["signals",{"_index":495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solution",{"_index":493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sont",{"_index":491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sould",{"_index":304,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BaseCrudService.html":{},"interfaces/Company.html":{},"modules/CoreModule.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{},"index.html":{}}}],["src/.../generics.types.ts",{"_index":446,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../observable",{"_index":470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/abstracts/crud",{"_index":135,"title":{},"body":{"classes/BaseCrudService.html":{},"coverage.html":{}}}],["src/app/core/core.module.ts",{"_index":215,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/patterns/crud",{"_index":294,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"coverage.html":{}}}],["src/app/core/patterns/reactive",{"_index":333,"title":{},"body":{"interfaces/YReactiveService.html":{},"coverage.html":{}}}],["src/app/core/types/generics.types.ts",{"_index":448,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/features/user/user.component.ts",{"_index":253,"title":{},"body":{"components/UserComponent.html":{},"coverage.html":{}}}],["src/app/features/user/user.component.ts:11",{"_index":257,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/features/user/user.entity.ts",{"_index":6,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/features/user/user.module.ts",{"_index":266,"title":{},"body":{"modules/UserModule.html":{}}}],["src/app/features/user/user.service.ts",{"_index":272,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/features/user/user.service.ts:10",{"_index":274,"title":{},"body":{"injectables/UserService.html":{}}}],["src/observable",{"_index":358,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standards",{"_index":462,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["started",{"_index":379,"title":{"index.html":{}},"body":{}}],["statements",{"_index":343,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":192,"title":{},"body":{"classes/BaseCrudService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["stored",{"_index":405,"title":{},"body":{"index.html":{}}}],["street",{"_index":11,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{}}}],["string",{"_index":14,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["styleurl",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["subject",{"_index":181,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["subscribe",{"_index":339,"title":{},"body":{"interfaces/YReactiveService.html":{}}}],["success",{"_index":193,"title":{},"body":{"classes/BaseCrudService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["suite",{"_index":12,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{}}}],["super",{"_index":291,"title":{},"body":{"injectables/UserService.html":{}}}],["support",{"_index":433,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":434,"title":{},"body":{"modules.html":{}}}],["sémantiques",{"_index":226,"title":{},"body":{"modules/CoreModule.html":{}}}],["t",{"_index":165,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{}}}],["t[\"id",{"_index":199,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["table",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":167,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["target.id",{"_index":208,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["template",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["templateurl",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["test",{"_index":411,"title":{},"body":{"index.html":{}}}],["testing",{"_index":423,"title":{},"body":{"index.html":{}}}],["tests",{"_index":410,"title":{},"body":{"index.html":{}}}],["text",{"_index":453,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["textlong",{"_index":447,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["textshort",{"_index":319,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"miscellaneous/typealiases.html":{}}}],["theory.ts",{"_index":359,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["this._data$.asobservable",{"_index":151,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{}}}],["this._data$.next([data",{"_index":189,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["this._data$.next(data",{"_index":204,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["this._data$.next(this._data$.value.filter(entity",{"_index":212,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["this._data$.next(this._data$.value.map(entity",{"_index":206,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["this._data$.value",{"_index":190,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["this.http.delete(`${this.endpoint}/${target.id}`).subscribe(data",{"_index":211,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["this.http.get(`${this.endpoint}/${target}`).subscribe(data",{"_index":200,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["this.http.get(this.endpoint).subscribe(data",{"_index":203,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["this.http.post(this.endpoint",{"_index":187,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["this.http.put(`${this.endpoint}/${target.id",{"_index":205,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["this.increment",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["this.increment$.next(1",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["this.increment$.pipe(tap(console.log)).subscribe(console.warn",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["this.increment.set(1",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["this.increment.set(10",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["this.increment.set(100",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["this.increment.set(1000",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["this.increment.set(2",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["this.read",{"_index":292,"title":{},"body":{"injectables/UserService.html":{}}}],["todo",{"_index":201,"title":{},"body":{"classes/BaseCrudService.html":{}}}],["tree",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["tslib",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/Address.html":{},"components/AppComponent.html":{},"classes/BaseCrudService.html":{},"interfaces/Company.html":{},"modules/CoreModule.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"interfaces/YReactiveService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":444,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":457,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["types/generics.types",{"_index":180,"title":{},"body":{"classes/BaseCrudService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["un",{"_index":476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unbounded",{"_index":452,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["une",{"_index":492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uniqueid",{"_index":19,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"miscellaneous/typealiases.html":{}}}],["unit",{"_index":409,"title":{},"body":{"index.html":{}}}],["update",{"_index":149,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["update(target",{"_index":173,"title":{},"body":{"classes/BaseCrudService.html":{},"injectables/UserService.html":{},"interfaces/YCrudServicePattern.html":{}}}],["update(target:entity",{"_index":326,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["updated",{"_index":210,"title":{},"body":{"classes/BaseCrudService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["url",{"_index":20,"title":{},"body":{"interfaces/Address.html":{},"classes/BaseCrudService.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"miscellaneous/typealiases.html":{}}}],["use",{"_index":401,"title":{},"body":{"index.html":{}}}],["used",{"_index":306,"title":{},"body":{"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{}}}],["user",{"_index":24,"title":{"interfaces/User.html":{}},"body":{"interfaces/Address.html":{},"components/AppComponent.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["user.component",{"_index":269,"title":{},"body":{"modules/UserModule.html":{}}}],["user.component.html",{"_index":254,"title":{},"body":{"components/UserComponent.html":{}}}],["user.component.scss",{"_index":255,"title":{},"body":{"components/UserComponent.html":{}}}],["user.entity",{"_index":287,"title":{},"body":{"injectables/UserService.html":{}}}],["user.name",{"_index":251,"title":{},"body":{"modules/CoreModule.html":{},"components/UserComponent.html":{}}}],["user.service",{"_index":258,"title":{},"body":{"components/UserComponent.html":{}}}],["usercomponent",{"_index":96,"title":{"components/UserComponent.html":{}},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["usermodule",{"_index":113,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":21,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["users.length",{"_index":247,"title":{},"body":{"modules/CoreModule.html":{},"components/UserComponent.html":{}}}],["users[0].name",{"_index":250,"title":{},"body":{"modules/CoreModule.html":{},"components/UserComponent.html":{}}}],["userserive.read()example",{"_index":244,"title":{},"body":{"modules/CoreModule.html":{}}}],["userservice",{"_index":52,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userservice.data",{"_index":259,"title":{},"body":{"components/UserComponent.html":{}}}],["ustilisateur",{"_index":249,"title":{},"body":{"modules/CoreModule.html":{},"components/UserComponent.html":{}}}],["utilisées",{"_index":463,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["valeurs",{"_index":461,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["valid",{"_index":449,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["value",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseCrudService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"interfaces/YReactiveService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["valueobjects",{"_index":236,"title":{},"body":{"modules/CoreModule.html":{}}}],["var",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["variable",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":469,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":385,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":413,"title":{},"body":{"index.html":{}}}],["website",{"_index":28,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{}}}],["writablesignal",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["ycrudservicepattern",{"_index":138,"title":{"interfaces/YCrudServicePattern.html":{}},"body":{"classes/BaseCrudService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"coverage.html":{}}}],["ycrudserviceresponse",{"_index":176,"title":{"interfaces/YCrudServiceResponse.html":{}},"body":{"classes/BaseCrudService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"coverage.html":{}}}],["yentitywithid",{"_index":177,"title":{"interfaces/YEntityWithId.html":{}},"body":{"classes/BaseCrudService.html":{},"interfaces/YCrudServicePattern.html":{},"interfaces/YCrudServiceResponse.html":{},"interfaces/YEntityWithId.html":{},"coverage.html":{}}}],["yes",{"_index":172,"title":{},"body":{"classes/BaseCrudService.html":{},"interfaces/YCrudServicePattern.html":{}}}],["yreactiveservice",{"_index":139,"title":{"interfaces/YReactiveService.html":{}},"body":{"classes/BaseCrudService.html":{},"interfaces/YReactiveService.html":{},"coverage.html":{}}}],["zipcode",{"_index":13,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Company.html":{},"interfaces/Geo.html":{},"interfaces/User.html":{}}}],["zone.js",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/user/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            geo\n                                        \n                                \n                                \n                                        \n                                            street\n                                        \n                                \n                                \n                                        \n                                            suite\n                                        \n                                \n                                \n                                        \n                                            zipcode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        geo:         Geo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Geo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        suite:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipcode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zipcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Email, UniqueId, Url, Username } from \"../../core/types/generics.types\"\n\nexport interface User {\n  id: UniqueId\n  name: string\n  username: Username\n  email: Email\n  address: Address\n  phone: string\n  website: Url\n  company: Company\n}\n\nexport interface Address {\n  street: string\n  suite: string\n  city: string\n  zipcode: string\n  geo: Geo\n}\n\nexport interface Geo {\n  lat: string\n  lng: string\n}\n\nexport interface Company {\n  name: string\n  catchPhrase: string\n  bs: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                increment\n                            \n                            \n                                increment$\n                            \n                            \n                                userService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        increment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increment$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, WritableSignal, computed, effect, inject, signal } from '@angular/core';\nimport { UserService } from './features/user/user.service';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  userService = inject(UserService);\n\n  increment$ = new BehaviorSubject(0);\n  increment: WritableSignal = signal(0);\n\n\n  constructor() {\n    //this.increment$.pipe(tap(console.log)).subscribe(console.warn);\n\n    const log = computed(() => this.increment());\n\n    effect(() => {\n      console.log('Incremented', log());\n    });\n\n    // this.increment$.next(1);\n\n/*\n    this.increment.set(1);\n    this.increment.set(10);\n    this.increment.set(100);\n    this.increment.set(1000);\n\n    setTimeout(() => {\n      this.increment.set(2);\n    }, 0);\n\n    */\n\n  }\n\n\n}\n\n    \n\n    \n        Load List\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Load List'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserModule } from './features/user/user.module';\nimport { CoreModule } from './core/core.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CoreModule,\n    UserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseCrudService.html":{"url":"classes/BaseCrudService.html","title":"class - BaseCrudService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseCrudService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/abstracts/crud-service.abstract.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            YCrudServicePattern\n                            YReactiveService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _data$\n                            \n                            \n                                data$\n                            \n                            \n                                endpoint\n                            \n                            \n                                    Protected\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                read\n                            \n                            \n                                read\n                            \n                            \n                                read\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/abstracts/crud-service.abstract.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._data$.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/abstracts/crud-service.abstract.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :     E\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/abstracts/crud-service.abstract.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/abstracts/crud-service.abstract.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/abstracts/crud-service.abstract.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(target: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/abstracts/crud-service.abstract.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        read\n                        \n                    \n                \n            \n            \n                \nread()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/abstracts/crud-service.abstract.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        read\n                        \n                    \n                \n            \n            \n                \nread(target)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/abstracts/crud-service.abstract.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        read\n                        \n                    \n                \n            \n            \n                \nread(target?)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/abstracts/crud-service.abstract.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(target: T, data: Partial>)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/abstracts/crud-service.abstract.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        Partial>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { inject } from \"@angular/core\";\nimport { YCrudServicePattern, YCrudServiceResponse, YEntityWithId } from \"../patterns/crud-service.pattern\";\nimport { Url } from \"../types/generics.types\";\nimport { BehaviorSubject, Observable, Subject } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { YReactiveService } from \"../patterns/reactive-service.pattern\";\n\n\n\nexport abstract class BaseCrudService implements YCrudServicePattern, YReactiveService {\n\n  endpoint!: E;\n\n  protected _data$ = new BehaviorSubject([]);\n  data$ = this._data$.asObservable();\n\n  protected http = inject(HttpClient);\n\n  create(data: Omit): Observable> {\n    const serviceResponse = new Subject>();\n\n    this.http.post(this.endpoint, data).subscribe(data => {\n      this._data$.next([data, ...this._data$.value]);\n      serviceResponse.next({ status: \"success\", message: \"Created\", payload: data });\n    })\n\n    return serviceResponse.asObservable();\n  }\n\n  read(): Observable>;\n  read(target: T[\"id\"] ): Observable>;\n  read(target?: T[\"id\"] ): Observable> {\n    const serviceResponse = new Subject>();\n\n    if (target) {\n      this.http.get(`${this.endpoint}/${target}`).subscribe(data => {\n        // TODO Filter Data\n        this._data$.next([data, ...this._data$.value]);\n        serviceResponse.next({ status: \"success\", message: \"Read\", payload: data });\n      })\n    } else {\n      this.http.get(this.endpoint).subscribe(data => {\n        const payload: T[] = data;\n        this._data$.next(data);\n        serviceResponse.next({ status: \"success\", message: \"Read\", payload: data});\n      })\n    }\n\n\n    return serviceResponse.asObservable();\n  }\n  update(target: T, data: Partial>): Observable> {\n    const serviceResponse = new Subject>();\n\n    this.http.put(`${this.endpoint}/${target.id}`, data).subscribe(data => {\n      this._data$.next(this._data$.value.map(entity => entity.id === target.id ? data : entity))\n      serviceResponse.next({ status: \"success\", message: \"Updated\", payload: data });\n    });\n\n    return serviceResponse.asObservable();\n  }\n  delete(target: T): Observable> {\n    const serviceResponse = new Subject>();\n\n    this.http.delete(`${this.endpoint}/${target.id}`).subscribe(data => {\n      this._data$.next(this._data$.value.filter(entity => entity.id !== target.id));\n      serviceResponse.next({ status: \"success\", message: \"Deleted\", payload: data });\n    });\n\n\n    return serviceResponse.asObservable();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Company.html":{"url":"interfaces/Company.html","title":"interface - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/user/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bs\n                                        \n                                \n                                \n                                        \n                                            catchPhrase\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bs:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        catchPhrase\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        catchPhrase:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Email, UniqueId, Url, Username } from \"../../core/types/generics.types\"\n\nexport interface User {\n  id: UniqueId\n  name: string\n  username: Username\n  email: Email\n  address: Address\n  phone: string\n  website: Url\n  company: Company\n}\n\nexport interface Address {\n  street: string\n  suite: string\n  city: string\n  zipcode: string\n  geo: Geo\n}\n\nexport interface Geo {\n  lat: string\n  lng: string\n}\n\nexport interface Company {\n  name: string\n  catchPhrase: string\n  bs: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n\n    \n        Info\n    \n    \n        README\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n    \n        Core Module\n\n\"CoreModule\" encapsule les concepts architecturaux clefs de cette aapplication.\n\n\ngenerics - Type Sémantiques de l'application\npatterns - Interfaces décrivant les pattern recommandées\nentities - Interfaces de réprésenation d'Entités ou de ValueObjects\nservices - Application Level services (fonctionnels)\nguards   - Application Level gaurd services\n\nExample :\nuserSerive.read()Example :\n\n\n\n  Nombre d'utilisateurs : {{users.length}}\n\n  Dernier ustilisateur: {{users[0].name}}\n\n  \n    \n      {{user.name}}\n    \n  \n\n\n    \n\n    \n        import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  imports: [\n    HttpClientModule\n  ]\n})\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Geo.html":{"url":"interfaces/Geo.html","title":"interface - Geo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Geo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/user/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            lat\n                                        \n                                \n                                \n                                        \n                                            lng\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lng\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lng:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Email, UniqueId, Url, Username } from \"../../core/types/generics.types\"\n\nexport interface User {\n  id: UniqueId\n  name: string\n  username: Username\n  email: Email\n  address: Address\n  phone: string\n  website: Url\n  company: Company\n}\n\nexport interface Address {\n  street: string\n  suite: string\n  city: string\n  zipcode: string\n  geo: Geo\n}\n\nexport interface Geo {\n  lat: string\n  lng: string\n}\n\nexport interface Company {\n  name: string\n  catchPhrase: string\n  bs: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/user/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            company\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                        \n                                            website\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        company\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        company:         Company\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Company\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         UniqueId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UniqueId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         Username\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Username\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        website\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        website:         Url\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Url\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Email, UniqueId, Url, Username } from \"../../core/types/generics.types\"\n\nexport interface User {\n  id: UniqueId\n  name: string\n  username: Username\n  email: Email\n  address: Address\n  phone: string\n  website: Url\n  company: Company\n}\n\nexport interface Address {\n  street: string\n  suite: string\n  city: string\n  zipcode: string\n  geo: Geo\n}\n\nexport interface Geo {\n  lat: string\n  lng: string\n}\n\nexport interface Company {\n  name: string\n  catchPhrase: string\n  bs: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserComponent.html":{"url":"components/UserComponent.html","title":"component - UserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/user/user.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./user.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user/user.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, inject } from '@angular/core';\nimport { UserService } from './user.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrl: './user.component.scss'\n})\nexport class UserComponent {\n\n  public userService = inject(UserService);\n\n  /*\n  constructor(\n    //public userService: UserService,\n    //@Inject(UserService) public userService: UserService\n  ) { }\n  */\n\n}\n\n    \n\n    \n        \n\n\n\n  Nombre d'utilisateurs : {{users.length}}\n\n  Dernier ustilisateur: {{users[0].name}}\n\n  \n    \n      {{user.name}}\n    \n  \n\n\n\n\n  {{ userService.data$ | async | json }}\n\n -->\n\nLoad List -->\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Nombre d\\'utilisateurs : {{users.length}}  Dernier ustilisateur: {{users[0].name}}            {{user.name}}        {{ userService.data$ | async | json }} -->Load List -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_declarations\n\n\n\n\nUserComponent\n\nUserComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserComponent->UserModule\n\n\n\n\n\nUserComponent \n\nUserComponent \n\nUserComponent  -->\n\nUserModule->UserComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserComponent } from './user.component';\n\n\n\n@NgModule({\n  exports: [\n    UserComponent\n  ],\n  declarations: [\n    UserComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class UserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/user/user.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseCrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                endpoint\n                            \n                            \n                                    Protected\n                                _data$\n                            \n                            \n                                data$\n                            \n                            \n                                    Protected\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                read\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/user/user.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseCrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseCrudService:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(target: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseCrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseCrudService:63\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        read\n                        \n                    \n                \n            \n            \n                \nread()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseCrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseCrudService:31\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(target: T, data: Partial>)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseCrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseCrudService:53\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        Partial>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : 'https://jsonplaceholder.typicode.com/users'\n                    \n                \n                        \n                            \n                                Inherited from         BaseCrudService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseCrudService:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                        \n                            \n                                Inherited from         BaseCrudService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseCrudService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._data$.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseCrudService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseCrudService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                        \n                            \n                                Inherited from         BaseCrudService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseCrudService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BaseCrudService } from '../../core/abstracts/crud-service.abstract';\nimport { User } from './user.entity';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService extends BaseCrudService{\n\n  override endpoint:any = 'https://jsonplaceholder.typicode.com/users';\n\n  constructor() {\n    super()\n    setTimeout(() => { this.read() }, 5000)\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/YCrudServicePattern.html":{"url":"interfaces/YCrudServicePattern.html","title":"interface - YCrudServicePattern","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  YCrudServicePattern\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/patterns/crud-service.pattern.ts\n        \n\n\n            \n                Description\n            \n            \n                CRUD Service Pattern\nAll  services that are responsible for CRUD operations should implement this pattern.\nCRUD operations:\n\nCreate POST\nRead GET\nUpdate PUT\nDelete DELETE\n\nAll services sould have a api endpoint that is used to make requests to the server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            endpoint\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        read\n                                    \n                                \n                                \n                                    \n                                        read\n                                    \n                                \n                                \n                                    \n                                        read\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/patterns/crud-service.pattern.ts:28\n                        \n                    \n\n\n            \n                \n                        Outgoing data should not contain the id field\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe entity to be created\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(target: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/patterns/crud-service.pattern.ts:49\n                        \n                    \n\n\n            \n                \n                        Delete an entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe entity to be deleted\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        read\n                        \n                    \n                \n            \n            \n                \nread()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/patterns/crud-service.pattern.ts:34\n                        \n                    \n\n\n            \n                \n                        Read an entity\n\n\n                        \n                            Returns :         Observable>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        read\n                        \n                    \n                \n            \n            \n                \nread(target)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/patterns/crud-service.pattern.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        read\n                        \n                    \n                \n            \n            \n                \nread(target?)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/patterns/crud-service.pattern.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(target: Entity, data: Partial>)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/patterns/crud-service.pattern.ts:43\n                        \n                    \n\n\n            \n                \n                        Update an entity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe entity to be updated\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        Partial>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new data to be updated\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endpoint:     Endpoint\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Endpoint\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The api endpoint of the service\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { TextShort, UniqueId, Url } from \"../types/generics.types\";\n\n/**\n * CRUD Service Pattern\n *\n * All  services that are responsible for CRUD operations should implement this pattern.\n *\n * CRUD operations:\n * - Create POST\n * - Read GET\n * - Update PUT\n * - Delete DELETE\n *\n * All services sould have a api endpoint that is used to make requests to the server.\n */\nexport interface YCrudServicePattern {\n\n  /**\n   * The api endpoint of the service\n   */\n  endpoint:Endpoint;\n\n  /**\n   * Outgoing data should not contain the id field\n   * @param data - The entity to be created\n   */\n  create( data:Omit ):Observable >;\n\n  /**\n   * Read an entity\n   * @param target - The entity to be read\n   */\n  read():Observable >;\n  read(target:Entity['id']):Observable >;\n  read(target?:Entity['id'] ):Observable >;\n\n  /**\n   * Update an entity\n   * @param target - The entity to be updated\n   * @param data - The new data to be updated\n   */\n  update(target:Entity, data:Partial> ):Observable >;\n\n  /**\n   * Delete an entity\n   * @param target - The entity to be deleted\n   */\n  delete(target:Entity):Observable >;\n}\n\nexport interface YCrudServiceResponse {\n  status: 'success' | 'error';\n  message: TextShort;\n  payload: P | null;\n}\n\n/**\n * Entity with Id\n */\nexport interface YEntityWithId {\n  id:UniqueId\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/YCrudServiceResponse.html":{"url":"interfaces/YCrudServiceResponse.html","title":"interface - YCrudServiceResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  YCrudServiceResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/patterns/crud-service.pattern.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            payload\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         TextShort\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TextShort\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payload:     P | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     P | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"success\" | \"error\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"success\" | \"error\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { TextShort, UniqueId, Url } from \"../types/generics.types\";\n\n/**\n * CRUD Service Pattern\n *\n * All  services that are responsible for CRUD operations should implement this pattern.\n *\n * CRUD operations:\n * - Create POST\n * - Read GET\n * - Update PUT\n * - Delete DELETE\n *\n * All services sould have a api endpoint that is used to make requests to the server.\n */\nexport interface YCrudServicePattern {\n\n  /**\n   * The api endpoint of the service\n   */\n  endpoint:Endpoint;\n\n  /**\n   * Outgoing data should not contain the id field\n   * @param data - The entity to be created\n   */\n  create( data:Omit ):Observable >;\n\n  /**\n   * Read an entity\n   * @param target - The entity to be read\n   */\n  read():Observable >;\n  read(target:Entity['id']):Observable >;\n  read(target?:Entity['id'] ):Observable >;\n\n  /**\n   * Update an entity\n   * @param target - The entity to be updated\n   * @param data - The new data to be updated\n   */\n  update(target:Entity, data:Partial> ):Observable >;\n\n  /**\n   * Delete an entity\n   * @param target - The entity to be deleted\n   */\n  delete(target:Entity):Observable >;\n}\n\nexport interface YCrudServiceResponse {\n  status: 'success' | 'error';\n  message: TextShort;\n  payload: P | null;\n}\n\n/**\n * Entity with Id\n */\nexport interface YEntityWithId {\n  id:UniqueId\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/YEntityWithId.html":{"url":"interfaces/YEntityWithId.html","title":"interface - YEntityWithId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  YEntityWithId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/patterns/crud-service.pattern.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity with Id\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         UniqueId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UniqueId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { TextShort, UniqueId, Url } from \"../types/generics.types\";\n\n/**\n * CRUD Service Pattern\n *\n * All  services that are responsible for CRUD operations should implement this pattern.\n *\n * CRUD operations:\n * - Create POST\n * - Read GET\n * - Update PUT\n * - Delete DELETE\n *\n * All services sould have a api endpoint that is used to make requests to the server.\n */\nexport interface YCrudServicePattern {\n\n  /**\n   * The api endpoint of the service\n   */\n  endpoint:Endpoint;\n\n  /**\n   * Outgoing data should not contain the id field\n   * @param data - The entity to be created\n   */\n  create( data:Omit ):Observable >;\n\n  /**\n   * Read an entity\n   * @param target - The entity to be read\n   */\n  read():Observable >;\n  read(target:Entity['id']):Observable >;\n  read(target?:Entity['id'] ):Observable >;\n\n  /**\n   * Update an entity\n   * @param target - The entity to be updated\n   * @param data - The new data to be updated\n   */\n  update(target:Entity, data:Partial> ):Observable >;\n\n  /**\n   * Delete an entity\n   * @param target - The entity to be deleted\n   */\n  delete(target:Entity):Observable >;\n}\n\nexport interface YCrudServiceResponse {\n  status: 'success' | 'error';\n  message: TextShort;\n  payload: P | null;\n}\n\n/**\n * Entity with Id\n */\nexport interface YEntityWithId {\n  id:UniqueId\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/YReactiveService.html":{"url":"interfaces/YReactiveService.html","title":"interface - YReactiveService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  YReactiveService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/patterns/reactive-service.pattern.ts\n        \n\n\n            \n                Description\n            \n            \n                Reactive Service Pattern\nAll reactive services should implement this interface.\nA Reactive Service is a service with a public data$ access.\ndata$ is observable and emits the latest value of the service.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data$\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data$\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data$:     Pick | subscribe>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Pick | subscribe>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Observable of the latest value of the service.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { BehaviorSubject, Observable } from \"rxjs\";\n\n/**\n * Reactive Service Pattern\n *\n * All reactive services should implement this interface.\n * A Reactive Service is a service with a public data$ access.\n * data$ is observable and emits the latest value of the service.\n */\nexport interface YReactiveService {\n\n  /**\n   * Observable of the latest value of the service.\n   */\n  data$: Pick, 'subscribe'>;\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/abstracts/crud-service.abstract.ts\n            \n            class\n            BaseCrudService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/patterns/crud-service.pattern.ts\n            \n            interface\n            YCrudServicePattern\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/core/patterns/crud-service.pattern.ts\n            \n            interface\n            YCrudServiceResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/patterns/crud-service.pattern.ts\n            \n            interface\n            YEntityWithId\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/patterns/reactive-service.pattern.ts\n            \n            interface\n            YReactiveService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/features/user/user.component.ts\n            \n            component\n            UserComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/features/user/user.entity.ts\n            \n            interface\n            Address\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/features/user/user.entity.ts\n            \n            interface\n            Company\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/features/user/user.entity.ts\n            \n            interface\n            Geo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/features/user/user.entity.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/features/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/observable-theory.ts\n            \n            variable\n            click$\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/observable-theory.ts\n            \n            variable\n            count\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAnyTraining\nThis project was generated with Angular CLI version 18.0.2.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\ncluster_UserModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserComponent \n\nUserComponent \n\nUserComponent  -->\n\nUserModule->UserComponent \n\n\n\n\n\nUserComponent\n\nUserComponent\n\nUserModule -->\n\nUserComponent->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Email   (src/.../generics.types.ts)\n                        \n                        \n                            TextLong   (src/.../generics.types.ts)\n                        \n                        \n                            TextShort   (src/.../generics.types.ts)\n                        \n                        \n                            UniqueId   (src/.../generics.types.ts)\n                        \n                        \n                            Url   (src/.../generics.types.ts)\n                        \n                        \n                            Username   (src/.../generics.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/types/generics.types.ts\n    \n    \n        \n            \n                \n                    \n                    Email\n                \n            \n            \n                \n                    Email - A valid corporate email address\n\n                \n            \n            \n                \n                        Lowercase\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TextLong\n                \n            \n            \n                \n                    TextLong - An unbounded text value\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TextShort\n                \n            \n            \n                \n                    TextShort - A text value bounded to 15 characters\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UniqueId\n                \n            \n            \n                \n                    Generics Types\nSemantics: \"alias de types\" pour les valeurs standards utilisées dans l'application\n\n                \n            \n            \n                \n                        string | number\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Url\n                \n            \n            \n                \n                    Url - A url link\n\n                \n            \n            \n                \n                        Lowercase\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Username\n                \n            \n            \n                \n                    Username - A capitalized user name\n\n                \n            \n            \n                \n                        Capitalize\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            click$   (src/.../observable-theory.ts)\n                        \n                        \n                            count   (src/.../observable-theory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/observable-theory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        click$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : fromEvent(document, 'click')\n                    \n                \n\n            \n                \n                    La programmation réactive est un paradigme de programmation orienté flux de données et propagation des changements.\nIl faut donc un émetteur de données (Observable) et un récepteur de données (Observer).\nLes Observable RXJS sont une solution d'implémentation.\nLes signals angular sont une autre implémentation.\nDans Angular Signals et Observables sont compatible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
